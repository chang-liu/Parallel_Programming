<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0071)http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <title>
    randal:teach:cs420:mppjava.2012    [HSSL Wiki]
  </title>

  <meta name="generator" content="DokuWiki">
<meta name="robots" content="noindex,nofollow">
<meta name="date" content="2012-03-03T07:21:08-0500">
<meta name="keywords" content="randal,teach,cs420,mppjava.2012">
<link rel="search" type="application/opensearchdescription+xml" href="http://hssl.cs.jhu.edu/wiki/lib/exe/opensearch.php" title="HSSL Wiki">
<link rel="start" href="http://hssl.cs.jhu.edu/wiki/">
<link rel="contents" href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012&do=index" title="Sitemap">
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://hssl.cs.jhu.edu/wiki/feed.php">
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://hssl.cs.jhu.edu/wiki/feed.php?mode=list&ns=randal:teach:cs420">
<link rel="alternate" type="text/html" title="Plain HTML" href="http://hssl.cs.jhu.edu/wiki/doku.php?do=export_xhtml&id=randal:teach:cs420:mppjava.2012">
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://hssl.cs.jhu.edu/wiki/doku.php?do=export_raw&id=randal:teach:cs420:mppjava.2012">
<link rel="canonical" href="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/randal teach cs420 mppjava.2012 [HSSL Wiki].htm">
<link rel="stylesheet" media="screen" type="text/css" href="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/css.php">
<link rel="stylesheet" media="all" type="text/css" href="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/css(1).php">
<link rel="stylesheet" media="print" type="text/css" href="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/css(2).php">
<script type="text/javascript"><!--//--><![CDATA[//><!--
var NS='randal:teach:cs420';var JSINFO = {"id":"randal:teach:cs420:mppjava.2012","namespace":"randal:teach:cs420"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/js.php"></script>

  <link rel="shortcut icon" href="http://hssl.cs.jhu.edu/wiki/lib/tpl/default/images/favicon.ico">

  <link type="text/css" rel="stylesheet" href="chrome-extension://cpngackimfmofbokmjmljamhdncknpmg/style.css"><script type="text/javascript" charset="utf-8" src="chrome-extension://cpngackimfmofbokmjmljamhdncknpmg/page_context.js"></script></head>

<body screen_capture_injected="true">
<div class="dokuwiki">
  
  <div class="stylehead">

    <div class="header">
      <div class="pagename">
        [[<a href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012&do=backlink" title="Backlinks">randal:teach:cs420:mppjava.2012</a>]]
      </div>
      <div class="logo">
        <a href="http://hssl.cs.jhu.edu/wiki/doku.php" name="dokuwiki__top" id="dokuwiki__top" accesskey="h" title="[H]">HSSL Wiki</a>      </div>

      <div class="clearer"></div>
    </div>

    
    <div class="bar" id="bar__top">
      <div class="bar-left" id="bar__topleft">
        <form class="button btn_source" method="post" action="http://hssl.cs.jhu.edu/wiki/doku.php"><div class="no"><input type="hidden" name="do" value="edit"><input type="hidden" name="rev" value=""><input type="hidden" name="id" value="randal:teach:cs420:mppjava.2012"><input type="submit" value="Show pagesource" class="button" accesskey="v" title="Show pagesource [V]"></div></form>        <form class="button btn_revs" method="get" action="http://hssl.cs.jhu.edu/wiki/doku.php"><div class="no"><input type="hidden" name="do" value="revisions"><input type="hidden" name="id" value="randal:teach:cs420:mppjava.2012"><input type="submit" value="Old revisions" class="button" accesskey="o" title="Old revisions [O]"></div></form>      </div>

      <div class="bar-right" id="bar__topright">
        <form class="button btn_recent" method="get" action="http://hssl.cs.jhu.edu/wiki/doku.php"><div class="no"><input type="hidden" name="do" value="recent"><input type="hidden" name="id" value="randal:teach:cs420:mppjava.2012"><input type="submit" value="Recent changes" class="button" accesskey="r" title="Recent changes [R]"></div></form>        <form action="http://hssl.cs.jhu.edu/wiki/doku.php" accept-charset="utf-8" class="search" id="dw__search" method="get"><div class="no"><input type="hidden" name="do" value="search"><input type="text" id="qsearch__in" accesskey="f" name="id" class="edit" title="[F]"><input type="submit" value="Search" class="button" title="Search"><div id="qsearch__out" class="ajax_qsearch JSpopup" style="display: none; "></div></div></form>&nbsp;
      </div>

      <div class="clearer"></div>
    </div>

        <div class="breadcrumbs">
      <span class="bchead">Trace:</span> <span class="bcsep">»</span> <a href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:2012_course_schedule_and_assignments" class="breadcrumbs" title="randal:teach:cs420:2012_course_schedule_and_assignments">2012_course_schedule_and_assignments</a> <span class="bcsep">»</span> <span class="curid"><a href="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/randal teach cs420 mppjava.2012 [HSSL Wiki].htm" class="breadcrumbs" title="randal:teach:cs420:mppjava.2012">mppjava.2012</a></span>          </div>
    
    
  </div>
  
  
  <div class="page">
    <!-- wikipage start -->
    <!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header" style="cursor: pointer; "><span id="toc__toggle" style="cursor: pointer; " class="toc_close"><span>−</span></span>Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="level1"><div class="li"><span class="li"><a href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012#programming_assignment_2measuring_parallel_performance" class="toc">Programming Assignment #2: Measuring Parallel Performance</a></span></div>
<ul class="toc">
<li class="clear">

<ul class="toc">
<li class="level3"><div class="li"><span class="li"><a href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012#part_0what_you_need_to_know" class="toc">Part 0: What You Need to Know</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012#part_1parallel_coin_flipping" class="toc">Part 1: Parallel Coin Flipping</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012#part_2brute_force_a_des_key" class="toc">Part 2: Brute Force a DES Key</a></span></div></li></ul>
</li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->

<h1 class="sectionedit1"><a name="programming_assignment_2measuring_parallel_performance" id="programming_assignment_2measuring_parallel_performance">Programming Assignment #2: Measuring Parallel Performance</a></h1>
<div class="level1">

<p>
<em class="u">Due: 03/05/2012 (11:59 pm)</em>
</p>

<p>
In this assignment, you will write your first parallel programs using threads in Java. Follow the guidelines for creating concrete Runnable objects in Appendix C of Patterns for Parallel Programming. There will be few choices in the design of an appropriate parallel algorithm.  The point of this exercise is to explore scaleup and speedup on multi-core processors.
</p>

<p>
The majority of your grade (80%) will be derived from your answers to the questions.  These should be concise, thoughtful, and specific.  Please turn in a <acronym title="Portable Document Format">PDF</acronym> format document that answers the questions put forth. Please include your name, the date, and the assignment (in this case Programming Assignment #2) on your writeup. Items in <strong>bold</strong> represent additional deliverables.  You will turn in source code as well.
</p>

</div>

<h3 class="sectionedit2"><a name="part_0what_you_need_to_know" id="part_0what_you_need_to_know">Part 0: What You Need to Know</a></h3>
<div class="level3">

</div>

<h4><a name="amazon_ec2" id="amazon_ec2">Amazon EC2</a></h4>
<div class="level4">

<p>

You will run your programs on Amazon EC2 using a High-CPU Extra Large Instance.  These machines have 20 EC2 Compute Units on 8 virtual cores and will allow you to explore scaleup and speedup to that scale in multicore systems.
</p>

<p>
You should develop your code on your personal computer and only use EC2 for scalability testing.
</p>

<p>
To get started on AWS: 
You will need to sign for Amazon EC2. 
1) Log into the AWS management console. (<a href="http://aws.amazon.com/console/" class="urlextern" title="http://aws.amazon.com/console/" rel="nofollow">http://aws.amazon.com/console/</a> )
2) Launch a new instance ( Linux/Windows) and connect to your instance.The following link walks you through the process:
 <a href="http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/" class="urlextern" title="http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/" rel="nofollow">http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/</a>
( Note:You should ideally start EBS backed instances for persistant storage of data.
3) You can then run your program on your instance as you would your local machine. 
</p>

</div>

<h4><a name="submissions" id="submissions">Submissions</a></h4>
<div class="level4">

<p>

You will submit a tarball that contains your source code and a <acronym title="Portable Document Format">PDF</acronym> document that answers the specified questions. Your tar file should be named lastname-hw1.tar.gz.  When extracting the tar file (using tar xfz), a single directory should be created called lastname-hw1. Your code should be in that directory.  You also must include a README file indicating how to compile and test your code.  Your design document must include details about your implementation including your design, any quirks or limitations as well as anything that is noteworthy.  It must be in <acronym title="Portable Document Format">PDF</acronym> format; do not turn in a <acronym title="Microsoft">MS</acronym> Word document. If your code has limitations and you note them in the document, e.g. if it doesn't compile.  Ideally, you will provide a make file using appropriate targets (all, clean, etc.).  Finally, do not include object code or any other intermediate code
in your submission.
</p>

<p>
In short, the contents of your tar file should have the following form:

</p>
<ul>
<li class="level1"><div class="li"> lastname/</div>
<ul>
<li class="level2"><div class="li"> README</div>
</li>
<li class="level2"><div class="li"> Makefile</div>
</li>
<li class="level2"><div class="li"> writeup.pdf</div>
</li>
<li class="level2"><div class="li"> source code…</div>
</li>
</ul>
</li>
</ul>

<p>
The assignment should be submitted on blackboard.
</p>

</div>

<h3 class="sectionedit3"><a name="part_1parallel_coin_flipping" id="part_1parallel_coin_flipping">Part 1: Parallel Coin Flipping</a></h3>
<div class="level3">

<p>

Write a java program that flips coins in parallel.  The program can be invoked from the shell (command line) and should take two arguments: the number of threads to start and the number of coin flips.  The program should output the number of heads (or tails), the number of total coin flips, and the elapsed (wall clock) time to run the program.  For example, my implementation does the following:

</p>
<pre class="code">&lt;randal@rio:/Users/randal/class/420/P1.MergeSort&gt; java CoinFlip
Usage: CoinFlip #threads #iterations</pre>
<pre class="code">&lt;randal@rio:/Users/randal/class/420/P1.MergeSort&gt; java CoinFlip 1 10000000
5000728 heads in 10000000 coin tosses.
Elapsed time: 525ms</pre>
<pre class="code">&lt;randal@rio:/Users/randal/class/420/P1.MergeSort&gt; java CoinFlip 2 10000000
5001027 heads in 10000000 coin tosses.
Elapsed time: 267ms</pre>

<p>

For this experiment you will need to use some java functions.  Specifically, System.currentTimeMillis() and Random.generate() and
Random.nextInt().  The SealedDES.java program I give you in part 2 has examples.  You will also need join() all your child threads from the parent thread.  This is the most basic form of synchronization.
</p>

</div>

<h4><a name="analysis" id="analysis">Analysis</a></h4>
<div class="level4">

<p>

For reasonable parameters, measure the scale-up and speed-up of this program from 1 thread to twice as many threads as cores.
Your experiment should take seconds (so that it's a significant number of trials) but not hours. For example, for 8 cores, you might run the program for 1,2,3,…,16 threads at 1000000000 coin tosses for speedup.  (Don't worry about +/- rounding errors for number of flips per thread.) And, run the program for 1,2,3,…, 16 threads at 1000000000,2000000000,…,16000000000 for scaleup.

</p>
<ol>
<li class="level1"><div class="li"> Scaleup and speedup</div>
<ol>
<li class="level2"><div class="li"> Produce charts that show the scaleup and speedup of your program.</div>
</li>
<li class="level2"><div class="li"> Algorithm (true) speedup/scaleup measures the scaling performance of the algorithm as a function of processing elements. In this case, from 1..8.  Characterize the algorithmic speedup/scaleup.  If it is sub-linear, describe the potential sources of loss.</div>
</li>
<li class="level2"><div class="li"> Why does the speedup not continue to increase past the number of cores?  Does it degrade?  Why?</div>
</li>
</ol>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Design and run an experiment that measures the startup costs of this code.</div>
<ol>
<li class="level2"><div class="li"> Describe your experiment.  Why does it measure startup?</div>
</li>
<li class="level2"><div class="li"> Estimate startup cost.  Justify your answer.</div>
</li>
<li class="level2"><div class="li"> Assuming that the startup costs are the serial portion of the code and the remaining time is the parallel portion of the code,what speedup would you expect to realize on 100 threads? 500 threads? 1000 threads?  (Use Amdahl's law.)</div>
</li>
</ol>
</li>
</ol>

</div>

<h3 class="sectionedit4"><a name="part_2brute_force_a_des_key" id="part_2brute_force_a_des_key">Part 2: Brute Force a DES Key</a></h3>
<div class="level3">

<p>

In this step, you will implement a parallel/threaded Java program that attempts to brute force a DES key.  Because we do not have reasonable computing power to attack 56 bit keys, we are going to attack smaller keys.  I also wanted to keep it simple. So, rather than giving you an already encrypted message, we are going to have your program generate the ciphertext and then brute force the decryption.
</p>

<p>
The attack is a combination brute force + known plaintext attack.  This is quite common. If you the attacker know part of the message, you can attempt to decrypt with all possible keys and check to see if the decrypted output matches the know plaintext.
</p>

<p>
The assignment starts with my serial implementation of a brute force attack. <a href="http://hssl.cs.jhu.edu/~randal/420/src/SealedDES.java" class="urlextern" title="http://hssl.cs.jhu.edu/~randal/420/src/SealedDES.java" rel="nofollow">SealedDES.java</a>.  Parallelize this program so that it will search for a specified number of keys using a specified number of threads.  My implementation does the following:

</p>
<pre class="code">&lt;randal@rio:/Users/randal/class/420/P1.MergeSort&gt; java BruteForceDES
Usage: BruteForceDES #threads key_size_in_bits</pre>
<pre class="code">&lt;randal@rio:/Users/randal/class/420/P1.MergeSort&gt; java BruteForceDES 2 20
Generated secret key 798711
Thread 0 Searched key number 0 at 0 milliseconds.
Thread 1 Searched key number 600000 at 1803 milliseconds.
Thread 0 Searched key number 100000 at 2204 milliseconds.
Thread 1 Searched key number 700000 at 3384 milliseconds.
Thread 0 Searched key number 200000 at 3783 milliseconds.
Thread 1 found decrypt key 798711 producing message: Johns Hopkins afraid of the big bad wolf?
Thread 1 Searched key number 800000 at 4891 milliseconds.
Thread 0 Searched key number 300000 at 5292 milliseconds.
Thread 1 Searched key number 900000 at 6426 milliseconds.
Thread 0 Searched key number 400000 at 6801 milliseconds.
Thread 1 Searched key number 1000000 at 7925 milliseconds.
Thread 0 Searched key number 500000 at 8309 milliseconds.
Final elapsed time: 9045</pre>

<p>

You should make sure that your threads have no shared state, variables, or objects.  For example, make sure to create a separate SealedDES object for decryption in each thread.  Do not use a single encryption/decryption object shared among all threads.
</p>

</div>

<h4><a name="analysis_for_part_2" id="analysis_for_part_2">Analysis for Part 2</a></h4>
<div class="level4">
<ol>
<li class="level1"><div class="li"> For reasonable parameters and for however many cores you have on the system, measure the scaleup and speedup of this program on the cluster.</div>
<ol>
<li class="level4"><div class="li"> Produce charts and interpret/describe the results.  Is the speedup linear?</div>
</li>
<li class="level4"><div class="li"> Why do you think that your scaleup/speedup are less than linear?  What are the causes for the loss of parallel efficiency?</div>
</li>
<li class="level4"><div class="li"> Extrapolating from your scaleup analysis, how long would it take to brute force a 56 bit DES key on a machine with 64 cores?  Explain your answer.</div>
</li>
</ol>
</li>
</ol>

</div>

    <!-- wikipage stop -->
  </div>

  <div class="clearer">&nbsp;</div>

  
  <div class="stylefoot">

    <div class="meta">
      <div class="user">
              </div>
      <div class="doc">
        randal/teach/cs420/mppjava.2012.txt · Last modified: 2012/03/03 07:21 by priya      </div>
    </div>

   
    <div class="bar" id="bar__bottom">
      <div class="bar-left" id="bar__bottomleft">
        <form class="button btn_source" method="post" action="http://hssl.cs.jhu.edu/wiki/doku.php"><div class="no"><input type="hidden" name="do" value="edit"><input type="hidden" name="rev" value=""><input type="hidden" name="id" value="randal:teach:cs420:mppjava.2012"><input type="submit" value="Show pagesource" class="button" accesskey="v" title="Show pagesource [V]"></div></form>        <form class="button btn_revs" method="get" action="http://hssl.cs.jhu.edu/wiki/doku.php"><div class="no"><input type="hidden" name="do" value="revisions"><input type="hidden" name="id" value="randal:teach:cs420:mppjava.2012"><input type="submit" value="Old revisions" class="button" accesskey="o" title="Old revisions [O]"></div></form>              </div>
      <div class="bar-right" id="bar__bottomright">
                                <form class="button btn_login" method="get" action="http://hssl.cs.jhu.edu/wiki/doku.php"><div class="no"><input type="hidden" name="do" value="login"><input type="hidden" name="sectok" value="d98efd027d1664aa1114560e95ea5e0d"><input type="hidden" name="id" value="randal:teach:cs420:mppjava.2012"><input type="submit" value="Login" class="button" title="Login"></div></form>        <form class="button btn_index" method="get" action="http://hssl.cs.jhu.edu/wiki/doku.php"><div class="no"><input type="hidden" name="do" value="index"><input type="hidden" name="id" value="randal:teach:cs420:mppjava.2012"><input type="submit" value="Sitemap" class="button" accesskey="x" title="Sitemap [X]"></div></form>        <a class="nolink" href="http://hssl.cs.jhu.edu/wiki/doku.php?id=randal:teach:cs420:mppjava.2012#dokuwiki__top"><input type="button" class="button" value="Back to top" onclick="window.scrollTo(0, 0)" title="Back to top"></a>&nbsp;
      </div>
      <div class="clearer"></div>
    </div>

  </div>

  <div class="license">Except where otherwise noted, content on this wiki is licensed under the following license:<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license" class="urlextern">CC Attribution-Noncommercial-Share Alike 3.0 Unported</a></div>
</div>

<div class="footerinc">

  <a href="http://hssl.cs.jhu.edu/wiki/feed.php" title="Recent changes RSS feed"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/button-rss.png" width="80" height="15" alt="Recent changes RSS feed"></a>

        <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license" title="CC Attribution-Noncommercial-Share Alike 3.0 Unported"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/cc-by-nc-sa.png" width="80" height="15" alt=""></a>
  
  <a href="http://www.dokuwiki.org/donate" title="Donate"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/button-donate.gif" alt="Donate" width="80" height="15"></a>

  <a href="http://www.php.net/" title="Powered by PHP"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/button-php.gif" width="80" height="15" alt="Powered by PHP"></a>

  <a href="http://validator.w3.org/check/referer" title="Valid XHTML 1.0"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/button-xhtml.png" width="80" height="15" alt="Valid XHTML 1.0"></a>

  <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3" title="Valid CSS"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/button-css.png" width="80" height="15" alt="Valid CSS"></a>

  <a href="http://dokuwiki.org/" title="Driven by DokuWiki"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/button-dw.png" width="80" height="15" alt="Driven by DokuWiki"></a>



</div>

<div class="no"><img src="./randal teach cs420 mppjava.2012 [HSSL Wiki]_files/indexer.php" width="1" height="1" alt=""></div>


</body></html>